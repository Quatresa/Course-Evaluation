<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.just.course.dao.TeacherDao">
  <insert id="saveTeacher" parameterType="cn.just.course.entity.Teacher">
   insert into teacher_role
   (teacher_id,
   teacher_name,
   teacher_pwd)
   values
   (#{teacherId},#{teacherName},#{teacherPassword})
  </insert>
  
   <!-- User findTeacherById(String id) -->
  <select id="findTeacherById" parameterType="string" resultType="cn.just.course.entity.Teacher">
    select teacher_id as teacherId,
           teacher_name as teacherName,
           teacher_pwd as teacherPassword,
           teacher_no as teacherNo,
           teacher_real_name as teacherRealName,
           teacher_sex as teacherSex,
           teacher_tell as teacherTell,
           teacher_birth as teacherBirth,
           teacher_job as teacherJob
    from teacher_role
    where teacher_id=#{teacherId}
  </select>
  
  <select id="findTeacherByName" parameterType="string" resultType="cn.just.course.entity.Teacher">
   select teacher_id as teacherId,
           teacher_name as teacherName,
           teacher_pwd as teacherPassword
    from teacher_role
    where teacher_name=#{teacherName}
  </select>
  
  <!-- User lookTeacherInfo() -->
  <select id="lookTeacherInfo" resultType="cn.just.course.entity.Teacher">
    select teacher_id as teacherId,
           teacher_name as teacherName,
           teacher_pwd as teacherPassword,
           teacher_no as teacherNo,
           teacher_real_name as teacherRealName,
           teacher_sex as teacherSex,
           teacher_tell as teacherTell,
           teacher_birth as teacherBirth,
           teacher_job as teacherJob
    from teacher_role
    order by teacher_no
  </select>
  <update id="updateTeacher"
		parameterType="map">
		update 
			teacher_role
		set
			<trim suffixOverrides=",">
				<if test="teacherNo != null">
					teacher_no=#{teacherNo},
				</if>
				<if test="teacherRealName != null">
					teacher_real_name=#{teacherRealName},
				</if>
				<if test="teacherSex != null">
					teacher_sex=#{teacherSex},
				</if>
				<if test="teacherTell != null">
					teacher_tell=#{teacherTell},
				</if>
				<if test="teacherBirth != null">
					teacher_birth=#{teacherBirth},
				</if>
				<if test="teacherJob != null">
					teacher_job=#{teacherJob}
				</if>
			</trim>
		where
			teacher_id=#{teacherId}
	</update>
	
	<update id="updateTeacherPwd"
		parameterType="map">
		update 
			teacher_role
		set
			<trim suffixOverrides=",">
				<if test="teacherPassword != null">
					teacher_pwd=#{teacherPassword}
				</if>
			</trim>
		where
			teacher_id=#{teacherId}
	</update>  
	
	<delete id="deleteTeacherInfo"
		parameterType="list">
		delete from teacher_role
		<where>
            teacher_no IN
            <foreach item="item" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>	
	</delete>
</mapper>
